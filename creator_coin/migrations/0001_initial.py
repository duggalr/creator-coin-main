# Generated by Django 3.2.16 on 2022-11-03 23:08

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Web3User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('user_pk_address', models.CharField(max_length=100, unique=True)),
                ('is_superuser', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('github_verified', models.BooleanField(default=False)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='CreatorProfile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('creator_name', models.CharField(blank=True, max_length=2000, null=True)),
                ('creator_email', models.CharField(blank=True, max_length=255, null=True)),
                ('creator_personal_website', models.URLField(blank=True, null=True)),
                ('creator_github_website', models.URLField(blank=True, null=True)),
                ('creator_discord_website', models.URLField(blank=True, null=True)),
                ('creator_description', models.TextField(blank=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user_obj', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='UserBetaEmails',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user_email', models.EmailField(max_length=254)),
            ],
        ),
        migrations.CreateModel(
            name='UserNft',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nft_name', models.CharField(blank=True, max_length=2000, null=True)),
                ('nft_symbol', models.CharField(blank=True, max_length=3, null=True)),
                ('nft_price', models.FloatField()),
                ('nft_total_supply', models.IntegerField()),
                ('nft_media_file', models.FileField(upload_to='')),
                ('nft_created_date', models.DateTimeField(auto_now_add=True)),
                ('nft_updated_at', models.DateTimeField(auto_now=True)),
                ('nft_ipfs_url', models.CharField(blank=True, max_length=2000, null=True)),
                ('nft_deployed_date', models.DateTimeField(auto_now_add=True)),
                ('nft_deployed', models.BooleanField(default=False)),
                ('nft_deployed_contract_address', models.CharField(blank=True, max_length=2000, null=True)),
                ('nft_deployed_transaction_hash', models.CharField(blank=True, max_length=2000, null=True)),
                ('nft_deployed_transaction_status', models.IntegerField(blank=True, null=True)),
                ('nft_deployed_contract_data', models.CharField(blank=True, max_length=2000, null=True)),
                ('nft_deployed_nonce', models.IntegerField(default=-1)),
                ('nft_deployed_chain_id', models.IntegerField(default=-1)),
                ('creator_obj', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='creator_coin.creatorprofile')),
            ],
        ),
        migrations.CreateModel(
            name='UserNonce',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nonce', models.CharField(max_length=100)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='UserNftTransactionHistory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('purchase_amount', models.IntegerField()),
                ('transaction_hash', models.CharField(max_length=2000)),
                ('transaction_created_date', models.DateTimeField(auto_now_add=True)),
                ('transaction_status', models.IntegerField()),
                ('nft_obj', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='creator_coin.usernft')),
                ('purchaser_user_obj', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='creator_coin.creatorprofile')),
            ],
        ),
        migrations.CreateModel(
            name='UserNftCollection',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('transaction_created_date', models.DateTimeField(auto_now_add=True)),
                ('creator_obj', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='creator_coin.creatorprofile')),
                ('nft_transaction_history_obj', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='creator_coin.usernfttransactionhistory')),
            ],
        ),
        migrations.CreateModel(
            name='GithubProfile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('github_username', models.CharField(max_length=2000)),
                ('github_profile_url', models.URLField()),
                ('github_avatar_url', models.URLField()),
                ('verified_date', models.DateTimeField(auto_now_add=True)),
                ('user_obj', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='CreatorProjectLog',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('log_title', models.CharField(blank=True, max_length=2000, null=True)),
                ('log_description', models.TextField(blank=True, null=True)),
                ('log_created_date', models.DateTimeField(auto_now_add=True)),
                ('creator_obj', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='creator_coin.creatorprofile')),
            ],
        ),
    ]
